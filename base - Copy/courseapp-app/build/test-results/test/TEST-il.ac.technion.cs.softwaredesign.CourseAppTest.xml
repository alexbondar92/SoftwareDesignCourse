<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="il.ac.technion.cs.softwaredesign.CourseAppTest" tests="101" skipped="0" failures="2" errors="0" timestamp="2019-05-23T14:50:25" hostname="DESKTOP-C0DN9PE" time="66.127">
  <properties/>
  <testcase name="an authentication token is invalidated after logout()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.039"/>
  <testcase name="log in user twice should throw exception()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.01"/>
  <testcase name="try to make operator of user that is not a member of this channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.096"/>
  <testcase name="add up to 512 users to the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="4.82"/>
  <testcase name="isUserInChannel throws UserNotAuthorizedException for non-member and non-administrator user()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.074"/>
  <testcase name="try to make operator of user that is not in the system()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.028"/>
  <testcase name="login very long username and password()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.008">
    <failure message="java.lang.AssertionError: Assertion failed" type="java.lang.AssertionError">java.lang.AssertionError: Assertion failed
	at il.ac.technion.cs.softwaredesign.CourseAppTest.login very long username and password(CourseAppTest.kt:257)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:117)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:185)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:181)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:128)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:102)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:82)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:78)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:835)
</failure>
  </testcase>
  <testcase name="makeAdministrator gets invalid token throws InvalidTokenException()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.022"/>
  <testcase name="get number of total users in channel by operator in channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="6.757"/>
  <testcase name="token is illegal at is isUserLoggedin()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.006"/>
  <testcase name="regular member leaves channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.191"/>
  <testcase name="get number of total users in channel by admin that is not part of the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="7.217"/>
  <testcase name="try to kick from a channel that is not exists()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.006"/>
  <testcase name="operator kick himself from the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.138"/>
  <testcase name="login and logout user()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.033"/>
  <testcase name="try to kick user with illegal token(admin)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.093"/>
  <testcase name="make random number of administrator in the system()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="5.783"/>
  <testcase name="leave channel with illegal token(existing channel)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.035"/>
  <testcase name="kick another operator from channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.152"/>
  <testcase name="try to kick user that was a member of the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.144"/>
  <testcase name="user never been in the system isUserLoggedIn returns null()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.01"/>
  <testcase name="try to make operator with illegal token(not of admin or operator)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.041"/>
  <testcase name="password is valid()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.016"/>
  <testcase name="first user in the channel is a Operator()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.201"/>
  <testcase name="try to kick user with illegal token(regular)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.015"/>
  <testcase name="get number of active users in channel by admin that is not part of the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="7.228"/>
  <testcase name="admin makes himself as operator in the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.221"/>
  <testcase name="try to kick non member user()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.043"/>
  <testcase name="try to get total of active users with channel that was deleted()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.035"/>
  <testcase name="try to kick user with illegal token(not operator)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.079"/>
  <testcase name="make administrator of logged out user()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.03"/>
  <testcase name="try to kick from a deleted channel that is not exists()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.033"/>
  <testcase name="try to make operator of admin that is not a member of this channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.05"/>
  <testcase name="try to make operator with with channel that not exits(never been)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.006"/>
  <testcase name="password is invalid()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.011"/>
  <testcase name="try to get number of active users with token that is not a member of the channel and not admin()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.035"/>
  <testcase name="create channel with illegal name()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.01"/>
  <testcase name="last user(operator) leaves the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.259"/>
  <testcase name="make random number of channels()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="1.349"/>
  <testcase name="selected amount of users are logged in at once()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.001">
    <failure message="java.lang.AssertionError: Assertion failed" type="java.lang.AssertionError">java.lang.AssertionError: Assertion failed
	at il.ac.technion.cs.softwaredesign.CourseAppTest.selected amount of users are logged in at once(CourseAppTest.kt:277)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:117)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:185)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:181)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:128)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:102)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:82)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:78)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:835)
</failure>
  </testcase>
  <testcase name="an authentication token is invalidated after logout, stays that way after reboot()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.009"/>
  <testcase name="makeAdministrator gets token that is not associated to administrator()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.214"/>
  <testcase name="isUserInChannel returns true for one user in channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.026"/>
  <testcase name="try to get number of active users with illegal token()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.002"/>
  <testcase name="last user(administrator) leaves the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.032"/>
  <testcase name="makeAdministrator makes administrator, an admin again()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.038"/>
  <testcase name="registered user log in with another logged in user s password should throw exception()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.033"/>
  <testcase name="leave chanel with valid token but the channel does not exist()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.013"/>
  <testcase name="leave channel with illegal token(not existing channel)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.033"/>
  <testcase name="operator leave the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.691"/>
  <testcase name="isUserInChannel return true  if user exists and  in channel ()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.091"/>
  <testcase name="corrupted(prefix &amp; suffix) token pass over()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.008"/>
  <testcase name="isUserInChannel return false if user exists and not in channel ()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.072"/>
  <testcase name="log out a none exist user ()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.009"/>
  <testcase name=" channel does not contains operators()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.197"/>
  <testcase name="makeAdministrator gets invalid user()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.028"/>
  <testcase name="isUserInChannel throws InvalidTokenException for non-existent token()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.002"/>
  <testcase name="get number of active users in channel by user in the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="7.195"/>
  <testcase name="check if user is logged in()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.008"/>
  <testcase name="isUserInChannel return null if user not exist ()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.07"/>
  <testcase name="try to get total of active users with channel that is not exits()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.005"/>
  <testcase name="Unregistered user returns null upon isUserLogIn check()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.006"/>
  <testcase name="try to get total of active users with token that is not a member of the channel and not admin()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.04"/>
  <testcase name="operator makes himself as an operator at the same channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.027"/>
  <testcase name="kick user from channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.131"/>
  <testcase name="kick another operator that is admin(as well) from channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.152"/>
  <testcase name="invalid token(not associated to no one) tries to join to channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.013"/>
  <testcase name="try to get number of active users with channel that is not exits()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.005"/>
  <testcase name="registered user log in with another registered not logged in user s password should throw exception()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.035"/>
  <testcase name="try to make operator with with channel that not exits(was deleted)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.032"/>
  <testcase name="try to make operator with illegal token(is admin but not operator)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.101"/>
  <testcase name="registered user log in with wrong password should throw exception()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.013"/>
  <testcase name="token is illegal at logout()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.003"/>
  <testcase name="token is invalid after logout()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.031"/>
  <testcase name="administrator retain their status after system reboot()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.04"/>
  <testcase name="administrator retain their status after relogging()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.04"/>
  <testcase name="enable to login same user after reboot()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.007"/>
  <testcase name="user log in then log out isUserLoggedIn returns False()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.042"/>
  <testcase name="try to get total of active users with illegal token()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.002"/>
  <testcase name="trying to join to channel that was deleted()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.136"/>
  <testcase name="administrator that is not an operator of this channel leaves the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.688"/>
  <testcase name="try to get number of active users with channel that was deleted()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.032"/>
  <testcase name="log in user twice and other users log in between should throw exception()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.221"/>
  <testcase name="first user in the system becomes administrator automatically()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.031"/>
  <testcase name="kick administrator from channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.134"/>
  <testcase name="create channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.012"/>
  <testcase name="user stays logged in after reboot, assumes his token stays active()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.01"/>
  <testcase name="try to make operator with illegal token(regular)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.013"/>
  <testcase name="get number of active users in channel with zero active users()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="7.216"/>
  <testcase name="isUserInChannel throws NoSuchEntityException for non-existent channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.005"/>
  <testcase name="try to kick illegal user()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.018"/>
  <testcase name="trying to login with wrong pass()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.011"/>
  <testcase name="operator kick himself from the channel, and he was the last one()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.036"/>
  <testcase name="try to make operator with illegal token(operator of other channel)()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.466"/>
  <testcase name="last user(regular) leaves the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.235"/>
  <testcase name="get number of total users in channel by user in the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="7.195"/>
  <testcase name="invalid token(not of admin) tries to create new channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.028"/>
  <testcase name="make operator of user that is a member of the channel, but is logged out()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.171"/>
  <testcase name="trying to leave channel with token that is not member of the channel()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.042"/>
  <testcase name="after login, a user is logged in()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="0.217"/>
  <testcase name="system is persistent after reboot()" classname="il.ac.technion.cs.softwaredesign.CourseAppTest" time="4.281"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
